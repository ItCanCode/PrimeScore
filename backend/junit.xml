<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="21" failures="3" errors="0" time="3.889">
  <testsuite name="LiveSport controller" errors="0" failures="0" skipped="0" timestamp="2025-09-01T17:57:52" time="2.39" tests="2">
    <testcase classname="LiveSport controller adds matches successfully" name="LiveSport controller adds matches successfully" time="0.013">
    </testcase>
    <testcase classname="LiveSport controller returns 400 if no matches" name="LiveSport controller returns 400 if no matches" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="verifyGoogleToken service" errors="0" failures="0" skipped="0" timestamp="2025-09-01T17:57:52" time="2.398" tests="2">
    <testcase classname="verifyGoogleToken service should return decoded token when verification succeeds" name="verifyGoogleToken service should return decoded token when verification succeeds" time="0.012">
    </testcase>
    <testcase classname="verifyGoogleToken service should throw an error when verification fails" name="verifyGoogleToken service should throw an error when verification fails" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="googleAuth controller" errors="0" failures="0" skipped="0" timestamp="2025-09-01T17:57:52" time="2.347" tests="7">
    <testcase classname="googleAuth controller should return 400 if idToken or action is missing" name="googleAuth controller should return 400 if idToken or action is missing" time="0.012">
    </testcase>
    <testcase classname="googleAuth controller should return 400 for invalid action" name="googleAuth controller should return 400 for invalid action" time="0.002">
    </testcase>
    <testcase classname="googleAuth controller signup: should return 409 if user already exists" name="googleAuth controller signup: should return 409 if user already exists" time="0.002">
    </testcase>
    <testcase classname="googleAuth controller signup: should create new user and return 201" name="googleAuth controller signup: should create new user and return 201" time="0.002">
    </testcase>
    <testcase classname="googleAuth controller login: should return 404 if user not found" name="googleAuth controller login: should return 404 if user not found" time="0.005">
    </testcase>
    <testcase classname="googleAuth controller login: should return 200 with user data if user exists" name="googleAuth controller login: should return 200 with user data if user exists" time="0.002">
    </testcase>
    <testcase classname="googleAuth controller should return 401 on token verification error" name="googleAuth controller should return 401 on token verification error" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="UserController" errors="0" failures="0" skipped="0" timestamp="2025-09-01T17:57:52" time="2.367" tests="5">
    <testcase classname="UserController getMatches should fetch matches and return 200" name="UserController getMatches should fetch matches and return 200" time="0.021">
    </testcase>
    <testcase classname="UserController getCurrentUser should fetch current user data" name="UserController getCurrentUser should fetch current user data" time="0.002">
    </testcase>
    <testcase classname="UserController getCurrentUser should return 401 if no token" name="UserController getCurrentUser should return 401 if no token" time="0.001">
    </testcase>
    <testcase classname="UserController updateUser should update user profile successfully" name="UserController updateUser should update user profile successfully" time="0.001">
    </testcase>
    <testcase classname="UserController updateUser should return 500 on error" name="UserController updateUser should return 500 on error" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="adminController.createMatch" errors="0" failures="0" skipped="0" timestamp="2025-09-01T17:57:52" time="2.904" tests="2">
    <testcase classname="adminController.createMatch should create a match successfully" name="adminController.createMatch should create a match successfully" time="0.01">
    </testcase>
    <testcase classname="adminController.createMatch should return 500 if Firestore throws an error" name="adminController.createMatch should return 500 if Firestore throws an error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="managerController" errors="0" failures="3" skipped="0" timestamp="2025-09-01T17:57:52" time="2.955" tests="3">
    <testcase classname="managerController createTeam should create a team and return 201" name="managerController createTeam should create a team and return 201" time="0.05">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: &quot;teams&quot;

Number of calls: 0
    at Object.toHaveBeenCalledWith (C:\Users\mulau\OneDrive\Desktop\StrangerStore\YOS3\Amigo\SDP\primescore\PrimeScore\backend\tests\managerController.test.js:43:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="managerController addPlayers should add players to team and return 201" name="managerController addPlayers should add players to team and return 201" time="0.003">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: &quot;teams&quot;

Number of calls: 0
    at Object.toHaveBeenCalledWith (C:\Users\mulau\OneDrive\Desktop\StrangerStore\YOS3\Amigo\SDP\primescore\PrimeScore\backend\tests\managerController.test.js:68:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="managerController addPlayers should return 400 if teamId or players[] missing" name="managerController addPlayers should return 400 if teamId or players[] missing" time="0.003">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: 400
Received: 500

Number of calls: 1
    at Object.toHaveBeenCalledWith (C:\Users\mulau\OneDrive\Desktop\StrangerStore\YOS3\Amigo\SDP\primescore\PrimeScore\backend\tests\managerController.test.js:79:26)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
  </testsuite>
</testsuites>